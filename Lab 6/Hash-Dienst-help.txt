speichere den string mit namen: my_name
$.post ("/hash", { name: my_name, str: my_string, store: 1 });

lese den string aus
$.post ("/hash", { name: my_name }, callback_func);

liste aller bekannten Objektnamen als Array
$.post ("/hash", callback_list_func);

Der hash-Dienst speichert einfache (flache) benannte Objekte. Diese können wieder abgefragt, verändert,
später ggf. auch gelöscht werden. Ein Objekt wird durch einen Namen (Pfad) eindeutig gekennzeichnet.

Man erhält das Objekt mit dem Namen "/game/tictactoe/game_1" über den Aufruf von
/hash mit dem Parameter name=/game/tictactoe/game_1.
In jQuery sieht der Aufruf dann so aus:
$.post ("/hash", { name: "/game/tictactoe/game_1" }, callback_func);

Die callback-Funktion erhält das gespeicherte Objekt, und kann dann auf Elemente davon zugreifen:
function callback_func (o) { $("h1").html (o.data); }

In den Hash mit diesem Namen speichert man Daten, indem man die zusätzlichen Elemente
in das gleiche Objekt mit dem Namen packt, und zusätzlich noch das Element store auf 1 setzt.
In jQuery sieht der Aufruf dann so aus:
$.post ("/hash", { name: "/game/tictactoe/game_1", data: "mein text", number: 123, store: 1 });

Gibt man eine callback-Funktion an, bekommt diese das gleiche Objekt übergeben, ohne das Element store.
Eine Liste aller bekannten Namen erhält man, wenn man keine Argumente an den /hash-Aufruf übergibt. 